{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Text","TextForm","useState","text","setText","style","color","Heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showalert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","replaceAll","split","length","Alert","alert","role","message","App","setmode","setalert","setTimeout","about","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"8MAIe,SAASA,EAAOC,GAG7B,OACE,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACE,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,mBAAmBE,KAAK,IAArC,SAA0CH,EAAMI,QAChD,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAGJ,sBAAKF,UAAS,0CAAoD,UAAfD,EAAME,KAAmB,OAAS,SAArF,UACE,uBAAOD,UAAU,mBAAmBM,QAASP,EAAMQ,WAAYH,KAAK,WAAWC,GAAG,2BAClF,uBAAOL,UAAU,mBAAmBQ,QAAQ,yBAA5C,SAAuET,EAAMU,kBCpB1E,SAASC,EAASX,GAC/B,MAAwBY,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAmCA,OACE,qCACE,qBAAKb,UAAU,YAAYc,MAAO,CAAEC,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,SAA7E,SAEE,sBAAKD,UAAU,YAAf,UACE,6BAAKD,EAAMiB,UACX,0BACEhB,UAAU,eACVK,GAAG,QACHY,MAAOL,EACPM,SAba,SAACC,GACtBN,EAAQM,EAAMC,OAAOH,QAabH,MAAO,CAAEO,gBAAgC,SAAftB,EAAME,KAAkB,UAAY,QAASc,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,SAChHqB,KAAK,MAEP,wBAAQtB,UAAU,uBAAuBM,QAhD3B,WACpB,IAAIiB,EAAUX,EAAKY,cACnBX,EAAQU,GACRxB,EAAM0B,UAAU,yBAA0B,YA6CpC,iCACA,wBAAQzB,UAAU,4BAA4BM,QA3C/B,WACrB,IAAIiB,EAAUX,EAAKc,cACnBb,EAAQU,GACRxB,EAAM0B,UAAU,yBAA0B,YAwCpC,kCACA,wBAAQzB,UAAU,wBAAwBM,QAtC9B,WAElBO,EADc,IAEdd,EAAM0B,UAAU,aAAc,YAmCxB,wBACA,wBAAQzB,UAAU,4BAA4BM,QAjCnC,WACjB,IAAIM,EAAOe,SAASC,eAAe,SACnChB,EAAKiB,SACLC,UAAUC,UAAUC,UAAUpB,EAAKK,OACnClB,EAAM0B,UAAU,sBAAuB,YA6BjC,uBACA,wBAAQzB,UAAU,uBAAuBM,QA1BvB,WACxBO,EAAQD,EAAKqB,WAAW,MAAO,KAC/BlC,EAAM0B,UAAU,sBAAuB,YAwBjC,qCAIJ,sBAAKzB,UAAU,YAAYc,MAAO,CAAEC,MAAsB,SAAfhB,EAAME,KAAkB,QAAU,SAA7E,UACE,mDACA,8BAAIW,EAAKsB,MAAM,KAAKC,OAApB,SAAkCvB,EAAKuB,OAAvC,gBACA,8BAAI,KAAQvB,EAAKsB,MAAM,KAAKC,OAA5B,cACA,yCACA,4BAAIvB,EAAKuB,OAAS,EAAIvB,EAAO,6DCvDtBwB,MARf,SAAerC,GACX,OACIA,EAAMsC,OAAS,sBAAKrC,UAAS,sBAAiBD,EAAMsC,MAAMjC,KAA7B,gCAAiEkC,KAAK,QAApF,UACX,iCAASvC,EAAMsC,MAAMjC,OADV,KAC2BL,EAAMsC,MAAME,YC0C/CC,MAxCf,WAEE,MAAwB7B,mBAAS,SAAjC,mBAAOV,EAAP,KAAawC,EAAb,KACA,EAAwB9B,mBAAS,oBAAjC,mBAAOF,EAAP,KAAaI,EAAb,KACA,EAA0BF,mBAAS,QAAnC,mBAAO0B,EAAP,KAAcK,EAAd,KACMjB,EAAY,SAACc,EAASnC,GAC1BsC,EAAS,CACPH,QAASA,EACTnC,KAAMA,IAERuC,YAAW,WACTD,EAAS,QACR,OAiBL,OACE,qCACE,cAAC5C,EAAD,CAAQK,MAAM,YAAYyC,MAAM,WAAW3C,KAAMA,EAAMM,WAhBxC,WACJ,UAATN,GACFwC,EAAQ,QACR5B,EAAQ,qBACRc,SAASkB,KAAK/B,MAAMO,gBAAkB,UACtCI,EAAU,6BAA8B,aAExCgB,EAAQ,SACR5B,EAAQ,oBACRc,SAASkB,KAAK/B,MAAMO,gBAAkB,QACtCI,EAAU,8BAA+B,aAMsChB,KAAMA,IACrF,cAAC,EAAD,CAAO4B,MAAOA,IACd,qBAAKrC,UAAU,YAAf,SACE,cAACU,EAAD,CAAUM,QAAQ,6BAA6BS,UAAWA,EAAWxB,KAAMA,UC7BpE6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,SAG1BkB,K","file":"static/js/main.20c42787.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport default function Navbar(props) {\n\n\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand p-3\" href=\"/\">{props.title}</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n            </li>\n          </ul>\n          <div className={`form-check p-3 form-switch text-${props.mode === 'light' ? 'Dark' : 'light'}`}>\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckChecked\" />\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\" >{props.Text}</label>\n          </div>\n\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string,\n  about: PropTypes.string,\n\n}\n","import React, { useState } from \"react\";\n\nexport default function TextForm(props) {\n  const [text, setText] = useState(\"\")\n  const handleUpClick = () => {\n    let newText = text.toUpperCase();\n    setText(newText)\n    props.showalert(\"Converted to Uppercase\", \"success\")\n  }\n\n  const handleLowClick = () => {\n    let newText = text.toLowerCase();\n    setText(newText)\n    props.showalert(\"Converted to Lowercase\", \"success\")\n  }\n\n  const handleclear = () => {\n    let newText = \"\";\n    setText(newText)\n    props.showalert(\"Text Clear\", \"success\")\n  }\n\n  const handleCopy = () => {\n    var text = document.getElementById(\"myBox\");\n    text.select();\n    navigator.clipboard.writeText(text.value);\n    props.showalert(\"Copied to clipboard\", \"success\")\n\n  }\n\n  const handleExtraSpaces = () => {\n    setText(text.replaceAll(/\\s/g, ''))\n    props.showalert(\"Extra space removed\", \"success\")\n  }\n\n  const handleOnChange = (event) => {\n    setText(event.target.value)\n  }\n  return (\n    <>\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'Black' }}>\n\n        <div className=\"mb-3 mt-2\" >\n          <h3>{props.Heading}</h3>\n          <textarea\n            className=\"form-control\"\n            id=\"myBox\"\n            value={text}\n            onChange={handleOnChange}\n            style={{ backgroundColor: props.mode === 'dark' ? '#292b2c' : 'white', color: props.mode === 'dark' ? 'white' : 'Black' }}\n            rows=\"8\"\n          ></textarea>\n          <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>Convert To Upercase</button>\n          <button className=\"btn btn-primary my-3 mx-3\" onClick={handleLowClick}>Convert To Lowercase</button>\n          <button className=\"btn btn-primary my-3 \" onClick={handleclear}>Clear Text</button>\n          <button className=\"btn btn-primary my-3 mx-3\" onClick={handleCopy}>Copy Text</button>\n          <button className=\"btn btn-primary my-3\" onClick={handleExtraSpaces}>Remove Extra Space</button>\n\n        </div>\n      </div>\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'Black' }}>\n        <h1>Your Text Summary</h1>\n        <p>{text.split(\" \").length} Word {text.length} Character</p>\n        <p>{0.008 * text.split(\" \").length} Minutes</p>\n        <h3>Preview</h3>\n        <p>{text.length > 0 ? text : \"Enter Something in the textbox above to preview it\"}</p>\n\n      </div>\n    </>\n  );\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    return (\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{props.alert.type}</strong>: {props.alert.message}\n        </div>\n    )\n}\n\nexport default Alert\n","import './App.css';\nimport Navbar from './Component/Navbar';\nimport TextForm from './Component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Component/Alert';\n\n\nfunction App() {\n\n  const [mode, setmode] = useState('light')\n  const [Text, setText] = useState('Enable Dark Mode')\n  const [alert, setalert] = useState(\"null\")\n  const showalert = (message, type) => {\n    setalert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark')\n      setText('Disable Dark Mode')\n      document.body.style.backgroundColor = \"#292b2c\"\n      showalert(\"Dark mode has been enabled\", \"success\")\n    } else {\n      setmode('light')\n      setText('Enable Dark Mode')\n      document.body.style.backgroundColor = \"white\"\n      showalert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"TextUtils\" about=\"About us\" mode={mode} toggleMode={toggleMode} Text={Text} />\n      <Alert alert={alert} />\n      <div className=\"container\">\n        <TextForm Heading=\"Enter the text to analyze \" showalert={showalert} mode={mode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}